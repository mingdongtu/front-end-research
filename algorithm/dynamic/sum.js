//给定一个包含非负数的数组和一个目标整数 k，编写一个函数来判断该数组是否含有连续的子数组，其大小至少为 2，总和为 k 的倍数，
//即总和为 n*k，其中 n 也是一个整数。
//动态规划：从大到小 开始推演，找出一个固定模式，除了规模变化，其他没变；
const nums =  [237,237,10,117,138,274,205,130,370,333,409,243,52,397,318,261,204,189,503,20,479,481,365,238,327,514,275,452,444,341,148,325,14,269,493,265,194,198,177,522,80,500,192,327,271,266,225,31,228,249,364,375,113,388,148,102,87,311,98,508,28,463,78,47,2,452,80,515,89,413,214,76,432,481,100,334,388,197,424,136,132,122,371,246,228,87,173,497,461,198,123,479,469,252,21,81,473,159,41,459,155,404,15,16,28,355,342,307,419,380,361,159,246,375,100,10,261,259,212,101,108,470,523,191,324,204,308,256,163,40,2,526,394,159,49,467,273,459,263,126,483,64,334,323,396,484,416,110,173,35,12,73,365,300,383,522,61,331,460,463,492,249,166,472,303,13,513,165,208,216,301,130,116,253,307,170,417,246,161,473,21,367,341,245,14,347,446,227,280,190,406,285,331,362,209,15,32,214,354,332,493,134,474,432,409,22,260,166,399,63,75,8,204,521,376,378,367,482,300,43,494,334,259,130,260,467,243,96,265,163,502,102,473,420,226,2,111,426,190,7,86,290,344,433,425,432,69,136,458,515,250,58,525,137,75,433,446,341,366,504,10,321,368,106,61,411,348,92,329,276,28,510,172,511,374,512,91,373,439,444,518,65,524,70,20,112,495,273,83,437,396,215,291,387,263,309,143,276,352,416,471,399,407,524,66,475,195,520,263,479,281,4,463,477,36,336,20,47,6,304,416,382,277,369,98,124,254,112,36,368,412,479,72,435,32,136,52,441,162,35,11,436,117,254,470,503,224,482,377,60,160,250,513,310,409,396,81,315,46,449,427,472,517,208,90,288,98,179,8,444,158,404,185,93,421,78,75,5,286,465,9,115,139,455,83,79,153,351,192,518,75,232,65,323,364,193,152,459,61,146,248,301,170,243,33,418,99,177,45,3,223,257,472,297,217,337,460,272,311,56,478,214,28,61,225,262,236,336,426,472,224,308,65,192,521,275,505,120,242,359,304,349,58,77,262,291,341,488,429,28,179,306,128,380,51,78,323,174,475,144,85,477,412,170,102,466,71,517,360,262,397,85,450,275,315,266,400,512,447,130,317,121,174,479,388,394,214,413,8,130,205,254,169,238,200,243,45,469,341,419,474,202,139,287,272,53,401,432,259,234,148,218,96,72,472,16,425,278,10,505,406,282,253,213,172,452,237,28,66,207,149,127,182,153,208,23,199,216,288,222,113,406,41,275,356,523,153,282,1,110,393,343,40,348,6,71,35,304,137,167,482,271,350,22,393,284,22,197,519,267,203,51,259,20,22,254,247,383,304,508,378,10,174,20,285,95,86,50,485,350,328,23,89,255,79,7,514,166,215,74,511,127,306,34,334,167,2,493,140,301,481,83,488,450,332,281,83,90,285,98,280,482,10,275,241,365,318,214,363,203,83,484,101,63,412,283,13,430,211,363,162,258,492,496,451,262,55,498,315,371,329,298,27,6,111,490,74,150,158,382,521,331,51,433,223,5,438,486,492,100,511,446,350,311,158,151,277,410,490,506,129,26,145,266,489,417,420,90,381,248,487,293,502,460,359,132,192,500,397,10,201,96,262,283,337,200,85,522,428,372,183,95,299,244,160,15,222,176,175,261,9,383,37,42,212,329,144,105,292,443,96,374,170,302,184,333,137,507,94,337,407,274,230,146,76,45,106,315,444,251,148,525,338,112,405,322,169,259,322,410,27,202,20,330,220,192,27,504,515,293,216,84,346,166,393,146,239,245,108,466,232,237,8,359,105,63,83,200,449,254,68,395,397,171,434,202,295,205,522,323,176,200,450,416,91,246,481,97,290,292,237,192,276,63,466,478,169,492,303,212,459,76,203,90,511,164,208,480,185,405,361,505,101,198,168,494,466,146,341,144,387,433,268,262,400,203,514,165,123,378,507,354,135,115,62,264,78,392,460,169,392,180,160,194,76,245,289,411,334,268,485,396,392,247,66,352,163,366,410,187,125,377,277,414,93,501,419,291,59,170,306,279,434,517,261,328,86,300,279,334,129,275,247,154,485,81,520,504,355,467,358,505,506,297,179,282,487,346,2,515,122,506,410,447,241,410,257,320,114,460,163,345,50,219,203,421,476,505,223,262,167,57,502,358,465,174,159,503,436,131,503,520,157,187,516,316,40,108,423,144,182,13,410,315,9,407,339,188,251,65,110,209,374,453,330,140,337,225,125,46,312,152,131,212,480,474,23,194,354,444,167,360,223,430,238,402,354,436,467,339]

var checkSubarraySum = function(nums, k) {
        // const ap = new Array(nums.length+1).fill(0)
       const cpnums = JSON.parse(JSON.stringify(nums))
       for(let i=0;i<cpnums.length;i++){

           nums = JSON.parse(JSON.stringify(cpnums))
            for(let j=i;j<nums.length;j++){
                  if(j-i>0){
                    nums[j] = (nums[j-1] + nums[j])%k
                    // console.log(nums[j])
                         if(nums[j]===0) return true
                         if(nums[j]%k===0) return true
                  }
            }

       }
       return false;
};
const a = checkSubarraySum(nums, 16666677)
console.log(a)